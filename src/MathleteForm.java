import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;
import javax.swing.UIManager;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MathleteForm.java
 *
 * Created on 2011-jan-08, 00:04:29
 */

/**
 * This work in licensed under Creative Commons. You are allowed to use and modify this work best you want.
 * For more info: http://creativecommons.org/licenses/by/3.0/
 * @author Christian Ã…berg
 */
public class MathleteForm extends javax.swing.JFrame {

    /** Creates new form MathleteForm */
    public MathleteForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TemperatureButtonGroup = new javax.swing.ButtonGroup();
        TemperatureResultButtonGroup = new javax.swing.ButtonGroup();
        WeightButtonGroup = new javax.swing.ButtonGroup();
        WeightResultButtonGroup = new javax.swing.ButtonGroup();
        HeightButtonGroup = new javax.swing.ButtonGroup();
        HeightResultButtonGroup = new javax.swing.ButtonGroup();
        jTabbedPane = new javax.swing.JTabbedPane();
        HomePanel = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        HomePicture = new javax.swing.JLabel();
        CalculatorPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CalculatorTable = new javax.swing.JTable();
        CalculatorInputTextField = new javax.swing.JTextField();
        ConverterPanel = new javax.swing.JPanel();
        CalculateLabel = new javax.swing.JLabel();
        TemperatureTextField = new javax.swing.JTextField();
        TemperatureLabel = new javax.swing.JLabel();
        CelciusRadioButton = new javax.swing.JRadioButton();
        FahrenheitRadioButton = new javax.swing.JRadioButton();
        KelvinRadioButton = new javax.swing.JRadioButton();
        TemperatureResultTextField = new javax.swing.JTextField();
        CelciusResultRadioButton = new javax.swing.JRadioButton();
        FahrenheitResultRadioButton = new javax.swing.JRadioButton();
        KelvinResultRadioButton = new javax.swing.JRadioButton();
        ResultLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        WeightLabel = new javax.swing.JLabel();
        WeightTextField = new javax.swing.JTextField();
        WeightResultTextField = new javax.swing.JTextField();
        KilogramRadioButton = new javax.swing.JRadioButton();
        PoundsRadioButton = new javax.swing.JRadioButton();
        KilogramResultRadioButton = new javax.swing.JRadioButton();
        PoundsResultRadioButton = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        HeightLabel = new javax.swing.JLabel();
        HeightTextField = new javax.swing.JTextField();
        HeightResultTextField = new javax.swing.JTextField();
        CentimeterRadioButton = new javax.swing.JRadioButton();
        FeetRadioButton = new javax.swing.JRadioButton();
        InchesRadioButton = new javax.swing.JRadioButton();
        CentimeterResultRadioButton = new javax.swing.JRadioButton();
        FeetResultRadioButton = new javax.swing.JRadioButton();
        InchesResultRadioButton = new javax.swing.JRadioButton();
        TableCreatorPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableCreatorTable = new javax.swing.JTable();
        fxInputTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        xStartValueTextField = new javax.swing.JTextField();
        xStartValueLabel = new javax.swing.JLabel();
        CreateTableButton = new javax.swing.JButton();
        xEndValueLabel = new javax.swing.JLabel();
        xEndValueTextField = new javax.swing.JTextField();
        IntervalLabel = new javax.swing.JLabel();
        IntervalTextField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        ExitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mathlete");
        setResizable(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Welcome to Mathlete(cc). (2011.01.08 build)");

        HomePicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cc.jpg"))); // NOI18N
        HomePicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)))
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(HomePicture)))
                .addContainerGap())
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(HomePicture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane.addTab("Home", HomePanel);

        CalculatorTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Input", "Result"
            }
        );
        CalculatorTable.setModel(CalculatorTableModel);
        jScrollPane1.setViewportView(CalculatorTable);

        CalculatorInputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculatorInputTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CalculatorPanelLayout = new javax.swing.GroupLayout(CalculatorPanel);
        CalculatorPanel.setLayout(CalculatorPanelLayout);
        CalculatorPanelLayout.setHorizontalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CalculatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addComponent(CalculatorInputTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE))
                .addContainerGap())
        );
        CalculatorPanelLayout.setVerticalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CalculatorInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane.addTab("Calculator", CalculatorPanel);

        CalculateLabel.setText("Calculate:");

        TemperatureTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TemperatureTextFieldKeyReleased(evt);
            }
        });

        TemperatureLabel.setText("Temperature");

        TemperatureButtonGroup.add(CelciusRadioButton);
        CelciusRadioButton.setSelected(true);
        CelciusRadioButton.setText("Celcius");
        CelciusRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CelciusRadioButtonActionPerformed(evt);
            }
        });

        TemperatureButtonGroup.add(FahrenheitRadioButton);
        FahrenheitRadioButton.setText("Fahrenheit");
        FahrenheitRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FahrenheitRadioButtonActionPerformed(evt);
            }
        });

        TemperatureButtonGroup.add(KelvinRadioButton);
        KelvinRadioButton.setText("Kelvin");
        KelvinRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KelvinRadioButtonActionPerformed(evt);
            }
        });

        TemperatureResultTextField.setEditable(false);

        TemperatureResultButtonGroup.add(CelciusResultRadioButton);
        CelciusResultRadioButton.setSelected(true);
        CelciusResultRadioButton.setText("Celcius");
        CelciusResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CelciusResultRadioButtonActionPerformed(evt);
            }
        });

        TemperatureResultButtonGroup.add(FahrenheitResultRadioButton);
        FahrenheitResultRadioButton.setText("Fahrenheit");
        FahrenheitResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FahrenheitResultRadioButtonActionPerformed(evt);
            }
        });

        TemperatureResultButtonGroup.add(KelvinResultRadioButton);
        KelvinResultRadioButton.setText("Kelvin");
        KelvinResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KelvinResultRadioButtonActionPerformed(evt);
            }
        });

        ResultLabel.setText("Result:");

        WeightLabel.setText("Weight");

        WeightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                WeightTextFieldKeyReleased(evt);
            }
        });

        WeightResultTextField.setEditable(false);

        WeightButtonGroup.add(KilogramRadioButton);
        KilogramRadioButton.setSelected(true);
        KilogramRadioButton.setText("Kilogram");
        KilogramRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KilogramRadioButtonActionPerformed(evt);
            }
        });

        WeightButtonGroup.add(PoundsRadioButton);
        PoundsRadioButton.setText("Pounds");
        PoundsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoundsRadioButtonActionPerformed(evt);
            }
        });

        WeightResultButtonGroup.add(KilogramResultRadioButton);
        KilogramResultRadioButton.setSelected(true);
        KilogramResultRadioButton.setText("Kilogram");
        KilogramResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KilogramResultRadioButtonActionPerformed(evt);
            }
        });

        WeightResultButtonGroup.add(PoundsResultRadioButton);
        PoundsResultRadioButton.setText("Pounds");
        PoundsResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoundsResultRadioButtonActionPerformed(evt);
            }
        });

        HeightLabel.setText("Height");

        HeightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                HeightTextFieldKeyReleased(evt);
            }
        });

        HeightResultTextField.setEditable(false);

        HeightButtonGroup.add(CentimeterRadioButton);
        CentimeterRadioButton.setSelected(true);
        CentimeterRadioButton.setText("Centimeter");
        CentimeterRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CentimeterRadioButtonActionPerformed(evt);
            }
        });

        HeightButtonGroup.add(FeetRadioButton);
        FeetRadioButton.setText("Feet");
        FeetRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FeetRadioButtonActionPerformed(evt);
            }
        });

        HeightButtonGroup.add(InchesRadioButton);
        InchesRadioButton.setText("Inches");
        InchesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InchesRadioButtonActionPerformed(evt);
            }
        });

        HeightResultButtonGroup.add(CentimeterResultRadioButton);
        CentimeterResultRadioButton.setSelected(true);
        CentimeterResultRadioButton.setText("Centimeter");
        CentimeterResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CentimeterResultRadioButtonActionPerformed(evt);
            }
        });

        HeightResultButtonGroup.add(FeetResultRadioButton);
        FeetResultRadioButton.setText("Feet");
        FeetResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FeetResultRadioButtonActionPerformed(evt);
            }
        });

        HeightResultButtonGroup.add(InchesResultRadioButton);
        InchesResultRadioButton.setText("Inches");
        InchesResultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InchesResultRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConverterPanelLayout = new javax.swing.GroupLayout(ConverterPanel);
        ConverterPanel.setLayout(ConverterPanelLayout);
        ConverterPanelLayout.setHorizontalGroup(
            ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConverterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addComponent(TemperatureLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConverterPanelLayout.createSequentialGroup()
                        .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TemperatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CelciusRadioButton)
                            .addComponent(FahrenheitRadioButton)
                            .addComponent(KelvinRadioButton)
                            .addComponent(CalculateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ResultLabel)
                            .addComponent(KelvinResultRadioButton)
                            .addComponent(FahrenheitResultRadioButton)
                            .addComponent(CelciusResultRadioButton)
                            .addComponent(TemperatureResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(WeightLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConverterPanelLayout.createSequentialGroup()
                        .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KilogramRadioButton)
                            .addComponent(PoundsRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PoundsResultRadioButton)
                            .addComponent(KilogramResultRadioButton)
                            .addComponent(WeightResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(HeightLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConverterPanelLayout.createSequentialGroup()
                        .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CentimeterRadioButton)
                            .addComponent(FeetRadioButton)
                            .addComponent(InchesRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InchesResultRadioButton)
                            .addComponent(FeetResultRadioButton)
                            .addComponent(CentimeterResultRadioButton)
                            .addComponent(HeightResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        ConverterPanelLayout.setVerticalGroup(
            ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConverterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CalculateLabel)
                    .addComponent(ResultLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TemperatureLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TemperatureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TemperatureResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CelciusRadioButton)
                    .addComponent(CelciusResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FahrenheitRadioButton)
                    .addComponent(FahrenheitResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KelvinRadioButton)
                    .addComponent(KelvinResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WeightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WeightResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KilogramRadioButton)
                    .addComponent(KilogramResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PoundsRadioButton)
                    .addComponent(PoundsResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HeightLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HeightResultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CentimeterRadioButton)
                    .addComponent(CentimeterResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FeetRadioButton)
                    .addComponent(FeetResultRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ConverterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InchesRadioButton)
                    .addComponent(InchesResultRadioButton))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Converter", ConverterPanel);

        TableCreatorTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "x =", "f(x) ="
            }
        );
        TableCreatorTable.setModel(TableCreatorTableModel);
        jScrollPane2.setViewportView(TableCreatorTable);

        jLabel1.setText("f(x):");

        xStartValueLabel.setText("x Start Value:");

        CreateTableButton.setText("Create Table");
        CreateTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateTableButtonActionPerformed(evt);
            }
        });

        xEndValueLabel.setText("x End Value:");

        IntervalLabel.setText("Interval:");

        javax.swing.GroupLayout TableCreatorPanelLayout = new javax.swing.GroupLayout(TableCreatorPanel);
        TableCreatorPanel.setLayout(TableCreatorPanelLayout);
        TableCreatorPanelLayout.setHorizontalGroup(
            TableCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TableCreatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TableCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TableCreatorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fxInputTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE))
                    .addGroup(TableCreatorPanelLayout.createSequentialGroup()
                        .addComponent(xStartValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xStartValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(xEndValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xEndValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(IntervalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IntervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(CreateTableButton)))
                .addContainerGap())
        );
        TableCreatorPanelLayout.setVerticalGroup(
            TableCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TableCreatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TableCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fxInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TableCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateTableButton)
                    .addComponent(xStartValueLabel)
                    .addComponent(xStartValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xEndValueLabel)
                    .addComponent(xEndValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IntervalLabel)
                    .addComponent(IntervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane.addTab("Table Creator", TableCreatorPanel);

        jMenu1.setText("File");

        ExitMenuItem.setText("Exit");
        ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(ExitMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     void CalculatorInputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculatorInputTextFieldActionPerformed
        String MathFunction = MakeValidMathFunction(CalculatorInputTextField.getText());

        try {
            String MathResult = jsEngine.eval(MathFunction).toString();
            CalculatorTableModel.insertRow(0, new Object[]{MathFunction, MathResult});

            if (MathFunction.indexOf('=') != -1) {
                CalculatorInputTextField.setText(null);
            }
        } catch (ScriptException ex) {
            CalculatorTableModel.insertRow(0, new Object[]{MathFunction, "Math Error"});
            ex.printStackTrace();
        }
    }//GEN-LAST:event_CalculatorInputTextFieldActionPerformed

    private void CreateTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateTableButtonActionPerformed
        String MathFunction = MakeValidMathFunction(fxInputTextField.getText()).replaceAll("x", "tx");
        String MathResult;
        double xEnd = Double.parseDouble(xEndValueTextField.getText());
        double Interval = Double.parseDouble(IntervalTextField.getText());

        TableCreatorTableModel.setRowCount(0);

        for (double x = Double.parseDouble(xStartValueTextField.getText()); x <= xEnd; x += Interval ) {
            try {
                jsEngine.eval("tx = " + Double.toString(x));
                MathResult = jsEngine.eval(MathFunction).toString();
                TableCreatorTableModel.addRow(new Object[]{x, MathResult});
            } catch (ScriptException ex) {
                TableCreatorTableModel.addRow(new Object[]{x, "Math Error"});
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_CreateTableButtonActionPerformed

    private void TemperatureTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TemperatureTextFieldKeyReleased
        UpdateTemperature();
    }//GEN-LAST:event_TemperatureTextFieldKeyReleased

    private void CelciusRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CelciusRadioButtonActionPerformed
        UpdateTemperature();
    }//GEN-LAST:event_CelciusRadioButtonActionPerformed

    private void FahrenheitRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FahrenheitRadioButtonActionPerformed
        UpdateTemperature();
    }//GEN-LAST:event_FahrenheitRadioButtonActionPerformed

    private void KelvinRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KelvinRadioButtonActionPerformed
        UpdateTemperature();
    }//GEN-LAST:event_KelvinRadioButtonActionPerformed

    private void CelciusResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CelciusResultRadioButtonActionPerformed
        UpdateTemperature();
    }//GEN-LAST:event_CelciusResultRadioButtonActionPerformed

    private void FahrenheitResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FahrenheitResultRadioButtonActionPerformed
        UpdateTemperature();
    }//GEN-LAST:event_FahrenheitResultRadioButtonActionPerformed

    private void KelvinResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KelvinResultRadioButtonActionPerformed
        UpdateTemperature();
    }//GEN-LAST:event_KelvinResultRadioButtonActionPerformed

    private void WeightTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WeightTextFieldKeyReleased
        UpdateWeight();
    }//GEN-LAST:event_WeightTextFieldKeyReleased

    private void KilogramRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KilogramRadioButtonActionPerformed
        UpdateWeight();
    }//GEN-LAST:event_KilogramRadioButtonActionPerformed

    private void PoundsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoundsRadioButtonActionPerformed
        UpdateWeight();
    }//GEN-LAST:event_PoundsRadioButtonActionPerformed

    private void KilogramResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KilogramResultRadioButtonActionPerformed
        UpdateWeight();
    }//GEN-LAST:event_KilogramResultRadioButtonActionPerformed

    private void PoundsResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoundsResultRadioButtonActionPerformed
        UpdateWeight();
    }//GEN-LAST:event_PoundsResultRadioButtonActionPerformed

    private void HeightTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HeightTextFieldKeyReleased
        UpdateHeight();
    }//GEN-LAST:event_HeightTextFieldKeyReleased

    private void CentimeterRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CentimeterRadioButtonActionPerformed
        UpdateHeight();
    }//GEN-LAST:event_CentimeterRadioButtonActionPerformed

    private void FeetRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FeetRadioButtonActionPerformed
        UpdateHeight();
    }//GEN-LAST:event_FeetRadioButtonActionPerformed

    private void InchesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InchesRadioButtonActionPerformed
        UpdateHeight();
    }//GEN-LAST:event_InchesRadioButtonActionPerformed

    private void CentimeterResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CentimeterResultRadioButtonActionPerformed
        UpdateHeight();
    }//GEN-LAST:event_CentimeterResultRadioButtonActionPerformed

    private void FeetResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FeetResultRadioButtonActionPerformed
        UpdateHeight();
    }//GEN-LAST:event_FeetResultRadioButtonActionPerformed

    private void InchesResultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InchesResultRadioButtonActionPerformed
        UpdateHeight();
    }//GEN-LAST:event_InchesResultRadioButtonActionPerformed

    private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitMenuItemActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            System.out.println("Error setting native L&F: " + e);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MathleteForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CalculateLabel;
    static javax.swing.JTextField CalculatorInputTextField;
    private javax.swing.JPanel CalculatorPanel;
    private javax.swing.JTable CalculatorTable;
    private javax.swing.JRadioButton CelciusRadioButton;
    private javax.swing.JRadioButton CelciusResultRadioButton;
    private javax.swing.JRadioButton CentimeterRadioButton;
    private javax.swing.JRadioButton CentimeterResultRadioButton;
    private javax.swing.JPanel ConverterPanel;
    private javax.swing.JButton CreateTableButton;
    private javax.swing.JMenuItem ExitMenuItem;
    private javax.swing.JRadioButton FahrenheitRadioButton;
    private javax.swing.JRadioButton FahrenheitResultRadioButton;
    private javax.swing.JRadioButton FeetRadioButton;
    private javax.swing.JRadioButton FeetResultRadioButton;
    private javax.swing.ButtonGroup HeightButtonGroup;
    private javax.swing.JLabel HeightLabel;
    private javax.swing.ButtonGroup HeightResultButtonGroup;
    private javax.swing.JTextField HeightResultTextField;
    private javax.swing.JTextField HeightTextField;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JLabel HomePicture;
    private javax.swing.JRadioButton InchesRadioButton;
    private javax.swing.JRadioButton InchesResultRadioButton;
    private javax.swing.JLabel IntervalLabel;
    private javax.swing.JTextField IntervalTextField;
    private javax.swing.JRadioButton KelvinRadioButton;
    private javax.swing.JRadioButton KelvinResultRadioButton;
    private javax.swing.JRadioButton KilogramRadioButton;
    private javax.swing.JRadioButton KilogramResultRadioButton;
    private javax.swing.JRadioButton PoundsRadioButton;
    private javax.swing.JRadioButton PoundsResultRadioButton;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JPanel TableCreatorPanel;
    private javax.swing.JTable TableCreatorTable;
    private javax.swing.ButtonGroup TemperatureButtonGroup;
    private javax.swing.JLabel TemperatureLabel;
    private javax.swing.ButtonGroup TemperatureResultButtonGroup;
    private javax.swing.JTextField TemperatureResultTextField;
    private javax.swing.JTextField TemperatureTextField;
    private javax.swing.ButtonGroup WeightButtonGroup;
    private javax.swing.JLabel WeightLabel;
    private javax.swing.ButtonGroup WeightResultButtonGroup;
    private javax.swing.JTextField WeightResultTextField;
    private javax.swing.JTextField WeightTextField;
    private javax.swing.JTextField fxInputTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JLabel xEndValueLabel;
    private javax.swing.JTextField xEndValueTextField;
    private javax.swing.JLabel xStartValueLabel;
    private javax.swing.JTextField xStartValueTextField;
    // End of variables declaration//GEN-END:variables

    ////////////////////////////////////////////////////////////////////////////

    // My variables
    javax.swing.table.DefaultTableModel CalculatorTableModel;
    javax.swing.table.DefaultTableModel TableCreatorTableModel;
    ScriptEngineManager mgr = new ScriptEngineManager();
    ScriptEngine jsEngine = mgr.getEngineByName("JavaScript");
    // End of my variables

    // My functions
    private void UpdateTemperature() {
        if (CelciusRadioButton.isSelected()) {
            if (CelciusResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(TemperatureTextField.getText());
            } else if (FahrenheitResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(Double.toString((Double.valueOf(TemperatureTextField.getText()).doubleValue() * 9/5) + 32));
            } else if (KelvinResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(Double.toString(Double.valueOf(TemperatureTextField.getText()).doubleValue() + 273.15));
            }
        } else if (FahrenheitRadioButton.isSelected()) {
            if (CelciusResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(Double.toString((Double.valueOf(TemperatureTextField.getText()).doubleValue() - 32) * 5/9));
            } else if (FahrenheitResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(TemperatureTextField.getText());
            } else if (KelvinResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(Double.toString((Double.valueOf(TemperatureTextField.getText()).doubleValue() - 32) * 5/9 + 273.15));
            }
        } else if (KelvinRadioButton.isSelected()) {
            if (CelciusResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(Double.toString(Double.valueOf(TemperatureTextField.getText()).doubleValue() - 273.15));
            } else if (FahrenheitResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(Double.toString(((Double.valueOf(TemperatureTextField.getText()).doubleValue() - 273.15) * 9/5) + 32));
            } else if (KelvinResultRadioButton.isSelected()) {
                TemperatureResultTextField.setText(TemperatureTextField.getText());
            }
        }
    }

    private void UpdateWeight() {
        if (KilogramRadioButton.isSelected()) {
            if (KilogramResultRadioButton.isSelected()) {
                WeightResultTextField.setText(WeightTextField.getText());
            } else if (PoundsResultRadioButton.isSelected()) {
                WeightResultTextField.setText(Double.toString(Double.valueOf(WeightTextField.getText()).doubleValue() / 0.45359237));
            }
        } else if (PoundsRadioButton.isSelected()) {
            if (KilogramResultRadioButton.isSelected()) {
                WeightResultTextField.setText(Double.toString(Double.valueOf(WeightTextField.getText()).doubleValue() * 0.45359237));
            } else if (PoundsResultRadioButton.isSelected()) {
                WeightResultTextField.setText(WeightTextField.getText());
            }
        }
    }

    private void UpdateHeight() {
        if (CentimeterRadioButton.isSelected()) {
            if (CentimeterResultRadioButton.isSelected()) {
                HeightResultTextField.setText(HeightTextField.getText());
            } else if (FeetResultRadioButton.isSelected()) {
                HeightResultTextField.setText(Double.toString(Double.valueOf(HeightTextField.getText()).doubleValue() / 30.48));
            } else if (InchesResultRadioButton.isSelected()) {
                HeightResultTextField.setText(Double.toString(Double.valueOf(HeightTextField.getText()).doubleValue() / 2.54));
            }
        } else if (FeetRadioButton.isSelected()) {
            if (CentimeterResultRadioButton.isSelected()) {
                HeightResultTextField.setText(Double.toString(Double.valueOf(HeightTextField.getText()).doubleValue() * 30.48));
            } else if (FeetResultRadioButton.isSelected()) {
                HeightResultTextField.setText(HeightTextField.getText());
            } else if (InchesResultRadioButton.isSelected()) {
                HeightResultTextField.setText(Double.toString(Double.valueOf(HeightTextField.getText()).doubleValue() * 12));
            }
        } else if (InchesRadioButton.isSelected()) {
            if (CentimeterResultRadioButton.isSelected()) {
                HeightResultTextField.setText(Double.toString(Double.valueOf(HeightTextField.getText()).doubleValue() * 2.54));
            } else if (FeetResultRadioButton.isSelected()) {
                HeightResultTextField.setText(Double.toString(Double.valueOf(HeightTextField.getText()).doubleValue() / 12));
            } else if (InchesResultRadioButton.isSelected()) {
                HeightResultTextField.setText(HeightTextField.getText());
            }
        }
    }

    private String MakeValidMathFunction (String MathInput) {
        char CurrentChar;
        int CharTendencyCount = 0;
        int Spaces = 0;
        boolean LastCharWasANum = false;

        for (int i = 0; i < MathInput.length(); i++)
        {
            CurrentChar = MathInput.charAt(i);

            if (IsCharacter(CurrentChar)) {
                if (1 < ++CharTendencyCount) {
                    MathInput = replaceCharAt(MathInput, (i - 1), Character.toString(MathInput.charAt(i - 1)) + "*" + MakeSpaces(Spaces));
                    CharTendencyCount = 0;
                } else if (LastCharWasANum) {
                    MathInput = replaceCharAt(MathInput, (i - 1), Character.toString(MathInput.charAt(i - 1)) + "*" + MakeSpaces(Spaces));
                    CharTendencyCount = 0;
                } LastCharWasANum = false; Spaces = 0;
            } else if ((CharTendencyCount == 1 || LastCharWasANum) && CurrentChar == '(') {
                MathInput = replaceCharAt(MathInput, (i - 1), Character.toString(MathInput.charAt(i - 1)) + "*" + MakeSpaces(Spaces));
                CharTendencyCount = 0;
                LastCharWasANum = false;
                Spaces = 0;
            } else if (CurrentChar == ' ') {
                Spaces++;
            } else {
                if (IsNumber(CurrentChar)) {
                    LastCharWasANum = true;
                } else {
                    LastCharWasANum = false;
                }
                CharTendencyCount = 0;
                Spaces = 0;
            }
        }

        return MathInput;
    }

    public static String replaceCharAt (String s, int pos, String c) {
        return s.substring(0, pos) + c + s.substring(pos + 1);
    }

    public static String MakeSpaces (int s) {
        String Result = "";

        for (int i = 0; i < s; i++) {
            Result = Result + " ";
        }

        return Result;
    }

    public boolean IsCharacter (char c) {
        int n = Character.toLowerCase(c);

        if (97 <= n && n <= 122) {
            return true;
        } else {
            return false;
        }
    }

    public boolean IsNumber (char c) {
        int n = c;
        if (48 <= n && n <= 57) {
            return true;
        } else {
            return false;
        }
    }
    // End of my functions
}
